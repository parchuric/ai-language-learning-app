version: '3.8'

services:
  ai-language-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      # Azure Service Configuration - These will be overridden by .env file or docker-compose.override.yml for actual values
      # For local development, create a docker-compose.override.yml (gitignored) or ensure your .env file is sourced.
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT:-<YOUR_AZURE_OPENAI_ENDPOINT>}
      - AZURE_OPENAI_DEPLOYMENT_NAME=${AZURE_OPENAI_DEPLOYMENT_NAME:-gpt-4o}
      - AZURE_SPEECH_REGION=${AZURE_SPEECH_REGION:-eastus}
      - KEY_VAULT_URI=${KEY_VAULT_URI:-<YOUR_KEY_VAULT_URI>}
      - AZURE_SPEECH_KEY_SECRET_NAME=${AZURE_SPEECH_KEY_SECRET_NAME:-ailangapp-speech-key}
      - AZURE_CONTENT_SAFETY_ENDPOINT=${AZURE_CONTENT_SAFETY_ENDPOINT:-<YOUR_AZURE_CONTENT_SAFETY_ENDPOINT>}
      - APPLICATIONINSIGHTS_CONNECTION_STRING=${APPLICATIONINSIGHTS_CONNECTION_STRING:-<YOUR_APPINSIGHTS_CONNECTION_STRING>}
      
      # These API Keys should be loaded from the .env file by the application inside the container
      # Ensure your Dockerfile and application logic handle loading from .env or environment passed by docker-compose
      # - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY} # Loaded from .env by app
      # - AZURE_SPEECH_KEY=${AZURE_SPEECH_KEY} # Loaded from .env by app (or Key Vault)
      # - AZURE_CONTENT_SAFETY_KEY=${AZURE_CONTENT_SAFETY_KEY} # Loaded from .env by app

      # Streamlit Configuration
      - STREAMLIT_SERVER_PORT=8000
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
    
    volumes:
      # Mount Azure credentials if available (for local development)
      - ~/.azure:/root/.azure:ro
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
